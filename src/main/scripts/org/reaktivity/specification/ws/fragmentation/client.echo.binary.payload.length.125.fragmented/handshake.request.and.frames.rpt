#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property key ${ws:handshakeKey()}
property writeMaskA ${ws:randomBytes(4)}
property writeMaskB ${ws:randomBytes(4)}
property writeMaskC ${ws:randomBytes(4)}
property writeMaskD ${ws:randomBytes(4)}
property writeMaskE ${ws:randomBytes(4)}
property client25a ${ws:randomBytes(25)}
property client25b ${ws:randomBytes(25)}
property client25c ${ws:randomBytes(25)}
property client25d ${ws:randomBytes(25)}
property client25e ${ws:randomBytes(25)}

property location "http://localhost:8080/echo"
property newServerAcceptRef  ${nuklei:newReferenceId()} # external

connect await ROUTED_SERVER
        "nukleus://ws/streams/source"
  option nukleus:route ${newServerAcceptRef}
  option nukleus:window 8192
  option nukleus:transmission "duplex"

write nukleus:begin.ext ${http:headers()
                              .item(":scheme", "http")
                              .item(":method", "GET")
                              .item(":path", "/echo")
                              .item(":authority", "localhost:8080")
                              .item("upgrade", "websocket")
                              .item("connection", "upgrade")
                              .item("sec-websocket-key", key)
                              .item("sec-websocket-version", "13")
                              .build()}

read nukleus:begin.ext ${http:headers()
                             .item(":status", "101")
                             .item("upgrade", "websocket")
                             .item("connection", "upgrade")
                             .item("sec-websocket-accept", ws:handshakeHash(key))
                             .build()}

connected

write [0x02 0x99] ${writeMaskA}
write option mask ${writeMaskA}
write ${client25a}
write option mask [0x00 0x00 0x00 0x00]

write [0x00 0x99] ${writeMaskB}
write option mask ${writeMaskB}
write ${client25b}
write option mask [0x00 0x00 0x00 0x00]

write [0x00 0x99] ${writeMaskC}
write option mask ${writeMaskC}
write ${client25c}
write option mask [0x00 0x00 0x00 0x00]

write [0x00 0x99] ${writeMaskD}
write option mask ${writeMaskD}
write ${client25d}
write option mask [0x00 0x00 0x00 0x00]

write [0x80 0x99] ${writeMaskE}
write option mask ${writeMaskE}
write ${client25e}
write option mask [0x00 0x00 0x00 0x00]

read [0x82 0x7d] ${client25a} ${client25b} ${client25c} ${client25d} ${client25e}
